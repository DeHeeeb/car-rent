// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using car_rent_backend.repository;

namespace car_rent_backend.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20210809162628_Added_Car_Entity")]
    partial class Added_Car_Entity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("car_rent_backend.domain.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Car");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Peugeot",
                            CarNr = "1001",
                            Class = "Low",
                            Type = "Limousine"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Citroen",
                            CarNr = "1015",
                            Class = "Medium",
                            Type = "Minivan"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Chevrolet",
                            CarNr = "5075",
                            Class = "High",
                            Type = "Convertible"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "VW",
                            CarNr = "1043",
                            Class = "Medium",
                            Type = "Limousine"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "BMW",
                            CarNr = "9311",
                            Class = "Medium",
                            Type = "Convertible"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Suzuki",
                            CarNr = "1353",
                            Class = "High",
                            Type = "Minivan"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Tesla",
                            CarNr = "3197",
                            Class = "High",
                            Type = "Limousine"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "VW",
                            CarNr = "4220",
                            Class = "Medium",
                            Type = "Minivan"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "VW",
                            CarNr = "8314",
                            Class = "Low",
                            Type = "Limousine"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "VW",
                            CarNr = "4750",
                            Class = "Low",
                            Type = "Limousine"
                        });
                });

            modelBuilder.Entity("car_rent_backend.domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "St. Gallen",
                            CustomerNr = "C123",
                            FirstName = "Hans",
                            LastName = "Meier",
                            Street = "Turmstrasse 3",
                            Zip = 9000
                        },
                        new
                        {
                            Id = 2,
                            City = "Wil SG",
                            CustomerNr = "C463",
                            FirstName = "Jasmin",
                            LastName = "Hugentobler",
                            Street = "Im Tobel 19",
                            Zip = 9500
                        },
                        new
                        {
                            Id = 3,
                            City = "Appenzell",
                            CustomerNr = "C932",
                            FirstName = "Reto",
                            LastName = "Manser",
                            Street = "Bühlstrasse 18a",
                            Zip = 9050
                        },
                        new
                        {
                            Id = 4,
                            City = "St. Gallen",
                            CustomerNr = "C435",
                            FirstName = "Lukas",
                            LastName = "Heeb",
                            Street = "Hauptstrasse 50",
                            Zip = 9000
                        },
                        new
                        {
                            Id = 5,
                            City = "Lausanne",
                            CustomerNr = "N773",
                            FirstName = "Hanna",
                            LastName = "Muster",
                            Street = "Wurstweg 5",
                            Zip = 1000
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
